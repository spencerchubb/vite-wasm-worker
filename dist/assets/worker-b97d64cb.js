let s,a=null;function o(){return(a===null||a.byteLength===0)&&(a=new Int32Array(s.memory.buffer)),a}const c=new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0});c.decode();let i=null;function l(){return(i===null||i.byteLength===0)&&(i=new Uint8Array(s.memory.buffer)),i}function y(e,t){return c.decode(l().subarray(e,e+t))}function u(){try{const n=s.__wbindgen_add_to_stack_pointer(-16);s.hello(n);var e=o()[n/4+0],t=o()[n/4+1];return y(e,t)}finally{s.__wbindgen_add_to_stack_pointer(16),s.__wbindgen_free(e,t)}}async function b(e,t){if(typeof Response=="function"&&e instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(e,t)}catch(r){if(e.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",r);else throw r}const n=await e.arrayBuffer();return await WebAssembly.instantiate(n,t)}else{const n=await WebAssembly.instantiate(e,t);return n instanceof WebAssembly.Instance?{instance:n,module:e}:n}}function m(){const e={};return e.wbg={},e}function w(e,t){return s=e.exports,f.__wbindgen_wasm_module=t,a=null,i=null,s}async function f(e){typeof e>"u"&&(e=new URL("/assets/rs_example_bg-778e4e2f.wasm",self.location));const t=m();(typeof e=="string"||typeof Request=="function"&&e instanceof Request||typeof URL=="function"&&e instanceof URL)&&(e=fetch(e));const{instance:n,module:r}=await b(await e,t);return w(n,r)}onmessage=function(e){f(new URL("/assets/rs_example_bg-778e4e2f.wasm",self.location)).then(()=>{const t=u();postMessage(t)})};
